# Generated by Django 4.2.20 on 2025-09-30 19:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gallery', '0003_alter_film_backdrop_alter_film_logo_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название подборки')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Описание подборки')),
                ('is_public', models.BooleanField(default=False, verbose_name='Публичный')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserFilmActivitie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_planned', models.BooleanField(default=False, verbose_name='Буду смотерь')),
                ('is_wathed', models.BooleanField(default=False, verbose_name='Просмотрено')),
                ('rating', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Миинмальная балл 0.'), django.core.validators.MaxValueValidator(10, 'Максимальный балл 10.')], verbose_name='Оценка')),
                ('is_public', models.BooleanField(default=False, verbose_name='Публичный')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.film', verbose_name='Фильм')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('text', models.TextField(verbose_name='Текст рецензии')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.film', verbose_name='Фильм')),
            ],
            options={
                'default_related_name': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='HistoryWatching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('watched_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Комментарий к просмотру')),
                ('user_film_activities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watching_history', to='activities.userfilmactivitie', verbose_name='Пользователь-Фильм')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.review', verbose_name='Комментарий')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionFilms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.collection', verbose_name='Подборка')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.film', verbose_name='Фильм')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='films',
            field=models.ManyToManyField(through='activities.CollectionFilms', to='gallery.film', verbose_name='Фильмы'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
